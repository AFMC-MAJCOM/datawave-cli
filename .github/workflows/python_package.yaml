name: Package

on: [push]

env:
  PYTHON_VERSION: "3.11"

jobs:
  check-version:
    uses: AFMC-MAJCOM/ci_python/.github/workflows/version_check.yaml@main
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pycodestyle
    - name: Analysing the code with pylint
      run: |
        pycodestyle $(git ls-files '*.py') --config .config/pycodestyle
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[testing]
    - name: Run pytest
      run: pytest
  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build
    - name: Package the project
      run: |
        python -m build
        ls dist
    - uses: actions/upload-artifact@v4
      with:
        name: datawave-cli-wheel
        path: dist/*.whl
  publish-release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/heads/main')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: datawave-cli-wheel
      - name: get version
        run: |
          echo "VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")" >> $GITHUB_ENV
      - name: Create a new Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.VERSION }}
          files: "*.whl"
          tag_name: '${{ env.VERSION}}'
